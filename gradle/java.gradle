/**
 * Copyright (c) 2017 Dell Inc., or its subsidiaries. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 */

apply plugin: 'java'
apply plugin: 'distribution'

compileJava {
    options.compilerArgs.addAll([
            "-Xlint:deprecation",
            "-Xlint:divzero",
            "-Xlint:empty",
            "-Xlint:fallthrough",
            "-Xlint:finally",
            "-Xlint:overrides",
            "-Xlint:path"
//            "-Werror"
    ])
}

def getFlinkMajorMinorVersion() {
    String ver = flinkVersion
    return ver.substring(0, ver.lastIndexOf('.'))
}

archivesBaseName = "pravega-connectors-flink-" + getFlinkMajorMinorVersion() + '_' + flinkScalaVersion

task sourceJar(type: Jar) {
    baseName = 'sources'
    classifier = 'sources'
    from sourceSets.main.java
}
artifacts { sourceJar }

task javadocJar(type: Jar) {
    baseName = 'javadoc'
    classifier = 'javadoc'
    from javadoc
}
artifacts { javadocJar }

task testJar(type: Jar) {
    baseName = 'tests'
    classifier = 'tests'
    from sourceSets.test.output
}
artifacts { testRuntime testJar }

tasks.withType(Test) {
    maxParallelForks = System.properties['maxParallelForks'] ? System.properties['maxParallelForks'].toInteger() : 1
    minHeapSize = "128m"
    maxHeapSize = "1024m"
}
