/**
 * Copyright (c) 2017 Dell Inc., or its subsidiaries. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath group: 'com.github.jengelman.gradle.plugins', name:'shadow', version: shadowGradlePlugin
    }
}

group = "io.pravega"
version = connectorVersion

apply plugin: 'eclipse'
apply from: 'gradle/idea.gradle'
apply from: 'gradle/java.gradle'
apply from: 'gradle/checkstyle.gradle'
apply from: 'gradle/findbugs.gradle'
apply from: 'gradle/jacoco.gradle'
apply from: 'gradle/maven.gradle'

repositories {
    mavenLocal()
    if (findProperty("repositoryUrl")) {
        maven {
            url findProperty("repositoryUrl")
        }
    }
    else {
        jcenter()
        mavenCentral()
        maven {
            url "https://repository.apache.org/snapshots"
        }
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
    }
}

configurations.all {
    resolutionStrategy {
        cacheDynamicVersionsFor 60, 'minutes'
        cacheChangingModulesFor 60, 'minutes'
    }
}

configurations {
    testCompile.extendsFrom(compileOnly)
    testCompile.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    testCompile.exclude group: 'log4j', module: 'log4j'
}

dependencies {
    compile group: 'io.pravega', name: 'pravega-client', version: pravegaVersion
    compile group: 'io.pravega', name: 'pravega-common', version: pravegaVersion
    compile group: 'io.pravega', name: 'pravega-shared', version: pravegaVersion
    compile group: 'io.pravega', name: 'pravega-shared-metrics', version: pravegaVersion
    compile group: 'io.pravega', name: 'pravega-shared-protocol', version: pravegaVersion
    compile group: 'io.pravega', name: 'pravega-shared-controller-api', version: pravegaVersion
    compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jApiVersion
    compile group: 'org.apache.commons', name: 'commons-text', version: commonsTextVersion

    compileOnly group: 'org.apache.flink', name: 'flink-streaming-scala_2.11', version: flinkVersion // provided by application
    compileOnly group: 'org.apache.flink', name: 'flink-table_2.11', version: flinkVersion // provided by application
    compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion // provided by flink-runtime

    testCompile group: 'junit', name: 'junit', version: junitVersion
    testCompile group: 'org.mockito', name: 'mockito-all', version: mockitoVersion
    testCompile group: 'org.apache.flink', name: 'flink-tests_2.11', version: flinkVersion
    testCompile group: 'org.apache.flink', name: 'flink-test-utils_2.11', version: flinkVersion
    testCompile group: 'org.apache.flink', name: 'flink-streaming-contrib_2.11', version: flinkVersion
    testCompile group: 'org.apache.flink', name: 'flink-streaming-java_2.11', classifier: 'tests', version: flinkVersion
    testCompile group: 'org.apache.flink', name: 'flink-runtime_2.11', classifier: 'tests', version: flinkVersion
    testCompile group: 'io.pravega', name: 'pravega-standalone', version: pravegaVersion

    //  configuring the shaded pom dependencies
    shadow group: 'org.slf4j', name: 'slf4j-api', version: slf4jApiVersion
    shadow group: 'org.apache.flink', name: 'flink-streaming-java_2.11', version: flinkVersion
}

shadowJar {
    dependencies {
        // 'include' specific dependencies in the shadow jar
        // IMPORTANT: transitive dependencies must be manually listed here!
        include dependency("com.google.guava:guava")
        include dependency("org.apache.commons:commons-text")
        include dependency("org.apache.commons:commons-lang3")
        include dependency("commons-io:commons-io")
        include dependency("io.netty:netty-common")
        include dependency("io.netty:netty-buffer")
        include dependency("io.netty:netty-resolver")
        include dependency("io.netty:netty-transport")
        include dependency("io.netty:netty-codec")
        include dependency("io.netty:netty-codec-http")
        include dependency("io.netty:netty-codec-http2")
        include dependency("io.netty:netty-codec-socks")
        include dependency("io.netty:netty-handler")
        include dependency("io.netty:netty-handler-proxy")
        include dependency("io.grpc:grpc-core")
        include dependency("io.grpc:grpc-protobuf")
        include dependency("io.grpc:grpc-stub")
        include dependency("io.grpc:grpc-context")
        include dependency("io.grpc:grpc-netty")
        include dependency("io.grpc:grpc-protobuf-lite")
        include dependency("com.google.protobuf:protobuf-java-util")
        include dependency("com.google.protobuf:protobuf-java")
        include dependency("com.google.code.gson:gson")
        include dependency("com.google.instrumentation:instrumentation-api")
        include dependency("io.pravega:pravega-client")
        include dependency("io.pravega:pravega-common")
        include dependency("io.pravega:pravega-shared")
        include dependency("io.pravega:pravega-shared-metrics")
        include dependency("io.pravega:pravega-shared-protocol")
        include dependency("io.pravega:pravega-shared-controller-api")
    }

    // Shading the libraries which could cause potential version conflicts with flink.
    relocate "com.google", "io.pravega.shaded.com.google"
    relocate "org.apache.commons", "io.pravega.shaded.org.apache.commons"

    relocate "io.grpc", "io.pravega.shaded.io.grpc"
    relocate "io.netty", "io.pravega.shaded.io.netty"

    classifier = null
    mergeServiceFiles()
}

javadoc {
    title = "Pravega Flink Connector"
    failOnError = false
    exclude "**/impl/**";
}
